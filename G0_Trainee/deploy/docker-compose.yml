version: '3'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-airflow-common:
  &airflow-common
  build:
    context: ../docker/airflow
    dockerfile: Dockerfile
  environment: 
    &airflow-common-env
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__STORE_DAG_CODE: 'true'
    AIRFLOW__CORE__STORE_SERIALIZED_DAGS: 'true'
    AIRFLOW__CORE__TEST_CONNECTION: Enabled
    AIRFLOW__DATABASE__LOAD_DEFAULT_CONNECTIONS: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://airflow:airflow@pg-airflow:5432/airflow
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL: 10
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW_UID: 50000
  volumes:
    - "../airflow_data/dags:/opt/airflow/dags:rw"
    - "../airflow_data/plugins:/opt/airflow/plugins:rw"
    - "airflow_data_logs_g0:/opt/airflow/logs:rw"
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    &airflow-common-depends-on
      pg-airflow:
        condition: service_started
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  pg-airflow:
    image: postgres:15-alpine
    container_name: pg-airflow
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - "airflow_data_g0:/var/lib/postgresql/data:rw"
    ports:
      - "5432:5432"
    networks:
      - network-af

  af-standalone:
    <<: *airflow-common
    restart: unless-stopped
    container_name: af-standalone
    ports:
      - "8080:8080"
    # command: standalone
    command: 
      - |
        airflow db init
        airflow db migrate
        airflow users create \
          -e airflow@example.com \
          -f airflow \
          -l airflow \
          -r Admin \
          -u airflow \
          -p airflow
        airflow connections delete 'dwh_conn' || true
        airflow connections add 'dwh_conn' \
          --conn-type 'postgres' \
          --conn-login 'postgres' \
          --conn-password 'password' \
          --conn-host 'pg-dwh' \
          --conn-port '5432' \
          --conn-schema 'postgres'
        airflow connections delete 'shop_1_conn' || true
        airflow connections add 'shop_1_conn' \
          --conn-type 'postgres' \
          --conn-login 'dwh-tech' \
          --conn-password 'Hhdsyt768sxD&^$' \
          --conn-host 'pg-shop-1' \
          --conn-port '5432' \
          --conn-schema 'postgres'
        airflow connections delete 'shop_2_conn' || true
        airflow connections add 'shop_2_conn' \
          --conn-type 'postgres' \
          --conn-login 'edwh-tech' \
          --conn-password 'jhdaE*dASD(U' \
          --conn-host 'pg-shop-2' \
          --conn-port '5432' \
          --conn-schema 'postgres'
        airflow variables import -a overwrite /opt/airflow/dags/scripts/airflow_variable.json
        airflow standalone
    mem_reservation: "2G"
    mem_limit: "3G"
    networks:
      - network-af
      - network-dwh
      - network-1
      - network-2

  pg-dwh:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - env/dwh.env
    container_name: pg-dwh
    volumes:
      - "../dwh_data:/var/lib/postgresql/data:rw"
    ports:
      - 5435:5432
    networks:
      - network-dwh

  dbeaver:
    image: dbeaver/cloudbeaver:24.1.0
    restart: unless-stopped
    env_file:
      - env/dwh.env
    container_name: dbeaver
    volumes:
      - "cloudbeaver:/opt/cloudbeaver/workspace:rw"
    ports:
      - "80:8978"
    mem_reservation: "300M"
    mem_limit: "700M"
    networks:
      - network-af
      - network-dwh
      - network-1
      - network-2

  pg-shop-1:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: pg-shop-1
    env_file:
      - ./env/shop-1.env
    ports:
      - 5433:5432
    networks:
      - network-1

  shop-1:
    build:
      context: ../docker/generator
      dockerfile: Dockerfile
    container_name: shop-1
    env_file:
      - ./env/shop-1.env
    volumes:
      - "../generator_app_data/logs/shop-1:/app/logs:rw"
    networks:
      - network-1
    mem_reservation: "10M"
    mem_limit: "50M"
    depends_on:
      - pg-shop-1
      
  pg-shop-2:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: pg-shop-2
    env_file:
      - ./env/shop-2.env
    ports:
      - 5434:5432
    networks:
      - network-2

  shop-2:
    build:
      context: ../docker/generator
      dockerfile: Dockerfile
    container_name: shop-2
    env_file:
      - ./env/shop-2.env
    volumes:
      - "../generator_app_data/logs/shop-2:/app/logs:rw"
    networks:
      - network-2
    mem_reservation: "10M"
    mem_limit: "50M"
    depends_on:
      - pg-shop-2

networks: 
  network-1:  
    name: network-1
  network-2:  
    name: network-2
  network-dwh:
    name: network-dwh
  network-af:
    name: network-af

volumes:
  cloudbeaver:
  airflow_data_g0:
  airflow_data_logs_g0:
